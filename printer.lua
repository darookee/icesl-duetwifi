-- DuetWifi on a Hypercube
-- based on the Wanhao i3 profile included in IceSL

version = 1

debug_level = 0 -- Higher number means more detailed debug in the gcode output
debug_match = nil --  A string for differing debug domains ( currentz, adj_fan_speed, feedrate)

layer_height = 0
currentz = 0
extruder_e = 0
layer_e = 0
layer_count = 0
last_fspeed = -1
current_extruder = 0
current_frate = 0

function comment(text)
  output('; ' .. text)
end

function debug_lvl(lvl, variable_to_output)
  if lvl <= debug_level then
    comment('dbg!' .. variable_to_output)
  end
end

function debug_output(lvl, match, variable_to_output)
  if debug_match then
    if match == debug_match then
      debug_lvl(lvl, variable_to_output)
    end
  else
    debug_lvl(lvl, variable_to_output)
  end
end

function header()
  comment(' generated by IceSL 2.1')
  comment(' filament used = ' .. filament_tot_length_mm[0])
  comment(' layer_height = ' .. layer_height)
  output('M140 S' .. bed_temp_degree_c)
  call_sys_macro('before_print.g')
end

function footer()
  call_sys_macro('after_print.g')
end

function output_fan_speed(fspeed)
  if (fspeed ~= last_fspeed) then
    debug_output(2, 'adj_fan_speed', 'Setting fan')
    if fspeed == 0 then
      output('M107')
    else
      output('M106 S' .. fspeed)
    end
    last_fspeed = fspeed
  end
end

function adj_fan_speed(layer_filament_mm)
  -- Adjust the fan speed based on the amount of filament extruded on the previous layer
  local i = 1
  debug_output(1, 'adj_fan_speed', '>adj_fan_speed(layer_filament_mm =' .. layer_filament_mm .. ')')
  if fan_speed then
    while fan_speed[i] do
      if layer_filament_mm <= fan_speed[i][1] then
        output_fan_speed(fan_speed[i][2])
        break
      end
      i = i + 1
    end -- while
    if fan_speed[i] == nil then
      debug_output(2, 'adj_fan_speed', 'No match in table using default')
      if default_fan_speed then
        output_fan_speed(default_fan_speed)
      end
    end
  else
    if default_fan_speed then
      debug_output(2, 'adj_fan_speed', 'setting fan to default')
      output_fan_speed(default_fan_speed)
    end
    debug_output(2, 'adj_fan_speed', 'No fan setting')
  end
  debug_output(1, 'adj_fan_speed','<adj_fan_speed(layer_filament_mm =' .. layer_filament_mm .. ')')
end

function layer_start(z)
  layer_count = layer_count + 1
  if layer_count == 1
  then
    last_fspeed = -1
    adj_fan_speed(first_layer_flag)
    layer_height = z
  end
  comment('<layer>' .. layer_count)
  output('G1 Z' .. f(z) .. ' F3000')
  currentz = z
end

function layer_stop()
  adj_fan_speed(layer_e)
  output('G92 E0')
  comment(' filament on this layer: ' .. layer_e)
  comment('</layer>')
  layer_e = 0
end

function retract()
  output('G10')
end

function prime(extruder,e)
  output('G11')
end

function select_extruder(extruder)
  output('T' .. extruder)
  current_extruder = extruder
end

function swap_extruder(from,to,x,y,z)
end

function move_xyz(x,y,z)
  if (z == currentz) then
    output('G1 X' .. f(x) .. ' Y' .. f(y) )
  else
    debug_output(1, 'currentz', 'Move is not to current layer')
    output('G1 X' .. f(x) .. ' Y' .. f(y) .. ' Z' .. f(z+z_offset))
    currentz = z
  end
end

function move_xyze(x,y,z,e)
  to_extrude = e - extruder_e
  extruder_e = e
  letter = 'E'
  if (z == currentz) then
    output('G1 X' .. f(x) .. ' Y' .. f(y) .. ' ' .. letter .. ff(to_extrude))
    layer_e = layer_e + to_extrude
  else
    output('G1 X' .. f(x) .. ' Y' .. f(y) .. ' Z' .. f(z+z_offset) .. ' ' .. letter .. ff(to_extrude))
    debug_output(0, 'currentz', 'Move is not to current layer')
    currentz = z
  end
end

function move_e(e)
  to_extrude = e - extruder_e
  extruder_e = e
  letter = 'E'
  layer_e = layer_e + to_extrude
  output('G1 ' .. letter .. ff(e - extruder_e_restart))
end

function set_feedrate(feedrate)
  if feedrate == current_frate then
    debug_output(2, 'feedrate', 'No output. Feedrate is already ' .. feedrate)
  else
    output('G1 F' .. feedrate)
    current_frate = feedrate
  end
end

function extruder_start()
end

function extruder_stop()
end

function progress(percent)
end

function set_extruder_temperature(extruder,temperature)
end

function call_macro(macro)
  output('M98 P' .. macro)
end

function call_sys_macro(macro)
  call_macro('/sys/' .. macro)
end
